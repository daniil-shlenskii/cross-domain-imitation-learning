_constants:
  gan_loss: &gan_loss misc.gan.losses.SoftplusLoss

problem:
  target_env_name: &target_env_name Hopper-v5
  source_env_name: &source_env_name Hopper-v5
  source_expert_buffer_state_path: &source_expert_buffer_state_path agents/experts/Hopper-v5/config/collected_rollouts/buffer_state.pickle

train:
  seed: &seed 0
  random_buffer_size: 5_000
  n_pretrain_iters: 0
  n_train_iters: 1_000_000
  batch_size: &batch_size 1024

logging:
  log_every: 1_000
  eval_every: 5_000
  save_every: 5_000
  n_eval_episodes: 5

agent:
  _target_: agents.gwil_v2.GWILAgent.create
  seed: *seed
  # Environments
  batch_size: *batch_size
  max_buffer_size: 1_000_000
  target_env_config:
    _target_: gymnasium.wrappers.TimeLimit
    max_episode_steps: 1000
    env:
      _target_: gymnasium.make
      id: *target_env_name
  source_env_config:
    _target_: gymnasium.wrappers.TimeLimit
    max_episode_steps: 1000
    env:
      _target_: gymnasium.make
      id: *source_env_name
  source_expert_buffer_state_path: *source_expert_buffer_state_path
  # Domain Encoders
  encoding_dim: 11
  target_encoder_config: &encoder_config
    _target_: misc.gan.Generator.create
    module_config:
      _target_: nn.networks._tmp.Identity
      # _target_: nn.networks.MLP
      # n_blocks: 2
      # hidden_dim: 256
    optimizer_config:
      transforms:
        - _target_: optax.clip
          max_delta: 1.0
        - _target_: optax.adamw
          learning_rate: 3e-4
    loss_config:
      _target_: *gan_loss
      is_generator: True
  source_encoder_config: *encoder_config
  domain_discriminator_config: &discrimiantor_config
    _target_: misc.gan.Discriminator.create
    module_config:
      _target_: nn.networks.MLP
      n_blocks: 2
      hidden_dim: 256
      out_dim: 1
      squeeze: True
    optimizer_config:
      transforms:
        - _target_: optax.clip
          max_delta: 1.0
        - _target_: optax.adamw
          learning_rate: 3e-4
    loss_config:
      _target_: *gan_loss
      is_generator: False
  policy_discriminator_config: *discrimiantor_config
  # Optimal Transport Solver
  ot_config:
    _target_: misc.enot.ENOTGW.create
    target_weight: 2.
    transport_module_config:
      # _target_: nn.networks._tmp.Identity
      _target_: nn.networks.MLP
      n_blocks: 4
      hidden_dim: 256
    transport_optimizer_config: &ot_optimizer_config
      transforms:
        - _target_: optax.clip
          max_delta: 1.0
        - _target_: optax.adam
          learning_rate: 3e-4
          b1: 0.9
          b2: 0.99
    transport_loss_fn_config:
      _target_: hydra.utils.get_method
      path: misc.enot.losses.transport_loss
    g_potential_module_config:
      _target_: nn.networks.NegativeMLP
      n_blocks: 4
      hidden_dim: 256
    g_potential_optimizer_config: *ot_optimizer_config
    g_potential_loss_fn_config:
      _target_: hydra.utils.get_method
      path: misc.enot.losses.g_potential_loss
    cost_fn_config:
      _target_: misc.enot.costs.InnerGWCostStable.create
    source_batch_preprocessor_config:
      _target_: misc.enot.batch_preprocessors.CentralizePreprocessor.create
    target_batch_preprocessor_config:
      _target_: misc.enot.batch_preprocessors.CentralizePreprocessor.create
